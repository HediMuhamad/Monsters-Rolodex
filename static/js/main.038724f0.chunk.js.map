{"version":3,"sources":["componenets/card/card.component.jsx","componenets/card-list/card-list.component.jsx","componenets/search-box/search-box.component.jsx","componenets/header/header.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","className","src","this","props","monster","image","alt","id","name","address","street","Component","CardList","fetchedData","map","element","Searchbox","placeholder","changeHandle","onChange","mobileClickIsHoverToHover","hoverOnHandler","Array","from","document","querySelectorAll","classList","add","getElementsByClassName","getElementsByTagName","style","overflowY","hoverOffHandler","remove","mobileHover","test","navigator","userAgent","Header","title","onMouseOver","onMouseLeave","onClick","App","whenDataFetched","temp","state","fetchedImages","setState","searchResult","searchKey","dataFetchHandler","a","fetch","rawFetchedData","json","jsonFetchedData","fetchedResourcePercent","fetchImages","binaryFetchedImage","blob","blobedBinaryFetchedImage","imageObjectInternalUrl","URL","createObjectURL","fetchImagesMap","unresolvablePromises","Promise","all","resolvablePromises","alert","searchBoxValue","result","filter","toLowerCase","includes","e","searchInMonsterFunction","target","value","hoverOnHandle","titleHoverOn","hoverOffHandle","titleHoverOff","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.038724f0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './card.styles.css'\r\n\r\nclass Card extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"card-container\">\r\n                <img src={this.props.monster.image} alt={this.props.monster.id} ></img>\r\n                <h1>{this.props.monster.name}</h1>\r\n                <h4>City: {this.props.monster.address.street}</h4>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;","import React, { Component } from \"react\";\r\nimport './card-list.styles.css'\r\nimport Card from '../card/card.component'\r\n\r\nclass CardList extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"card-list\">\r\n                {this.props.fetchedData.map(element=>{\r\n                    return <Card key={element.id} monster={element} />\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CardList;","import './search-box.styles.css'\r\n\r\nexport const Searchbox = ({placeholder, changeHandle}) => (\r\n    <input className=\"search-box\" placeholder={placeholder} onChange={changeHandle}></input>\r\n)","/* eslint-disable array-callback-return */\r\nimport { Searchbox } from \"../search-box/search-box.component\"\r\nimport './header.styles.css'\r\nvar mobileClickIsHoverToHover=true;\r\n\r\nconst hoverOnHandler = () => {\r\n    Array.from(document.querySelectorAll('.app *')).map(element=>{\r\n        element.classList.add('hide');\r\n    })\r\n    \r\n    document.getElementsByClassName('title-container')[0].classList.add('title-container-on-hover')\r\n    document.getElementsByClassName('title')[0].classList.add('title-on-hover')\r\n    document.getElementsByTagName('body')[0].style.overflowY='hidden';\r\n}\r\n\r\nconst hoverOffHandler = () => {\r\n    document.getElementsByClassName('title-container')[0].classList.remove('title-container-on-hover')\r\n    document.getElementsByClassName('title')[0].classList.remove('title-on-hover')\r\n    document.getElementsByTagName('body')[0].style.overflowY='auto';\r\n\r\n    Array.from(document.querySelectorAll('.app *')).map(element=>{\r\n        element.classList.remove('hide');\r\n    })\r\n}\r\n\r\nconst mobileHover = () =>{\r\n    if(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)){\r\n        if(mobileClickIsHoverToHover){\r\n            hoverOnHandler();\r\n        }else{\r\n            hoverOffHandler();\r\n        }\r\n        mobileClickIsHoverToHover=!mobileClickIsHoverToHover;\r\n    }\r\n}\r\n\r\nexport const Header = ({placeholder, changeHandle, title})=>(\r\n    <div className=\"header active-transition\">\r\n        <div className=\"title-container active-transition\" onMouseOver={hoverOnHandler} onMouseLeave={hoverOffHandler} onClick={mobileHover}><h1 className='title active-transition'>{title}</h1></div>\r\n        <Searchbox placeholder={placeholder} changeHandle={changeHandle}/>\r\n    </div>\r\n)","/* eslint-disable array-callback-return */\r\nimport './App.css';\r\nimport { Component } from 'react';\r\nimport CardList from './componenets/card-list/card-list.component'\r\nimport { Header } from './componenets/header/header.component';\r\n\r\nclass App extends Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={fetchedData:[], searchResult:[], fetchedImages:[], searchKey:''}\r\n  }\r\n  \r\n  componentDidMount(){\r\n    this.dataFetchHandler();\r\n  }\r\n  \r\n  //custom functions\r\n  async dataFetchHandler(){\r\n    let rawFetchedData, jsonFetchedData;\r\n    try{\r\n      rawFetchedData = await fetch('https://jsonplaceholder.typicode.com/users');\r\n      jsonFetchedData =  await rawFetchedData.json();\r\n      this.setState({fetchedData:jsonFetchedData, \r\n        fetchedResourcePercent: this.state.fetchedResourcePercent+5}) //it can be used for showing loading for fetchedData\r\n      \r\n      const fetchImages = async (element) =>{\r\n        try{\r\n          let binaryFetchedImage = await fetch(`https://robohash.org/${element.id}?set=set2`);\r\n          let blobedBinaryFetchedImage = await binaryFetchedImage.blob();\r\n          let imageObjectInternalUrl = URL.createObjectURL(blobedBinaryFetchedImage);\r\n          this.setState({fetchedResourcePercent: this.state.fetchedResourcePercent+9.5});  //it can be used for showing loading for fetchedData\r\n          return imageObjectInternalUrl;\r\n        }catch(e){\r\n          throw e;\r\n        }\r\n      }\r\n\r\n      const fetchImagesMap = async () => {\r\n        const unresolvablePromises = this.state.fetchedData.map(element=>fetchImages(element))\r\n        const resolvablePromises = await Promise.all(unresolvablePromises);\r\n        this.setState({fetchedImages:resolvablePromises});\r\n      }\r\n\r\n      await fetchImagesMap();\r\n      this.whenDataFetched();\r\n      \r\n    }catch(e){\r\n      alert('API Server is not available, please try again later.');\r\n    }\r\n    \r\n  }\r\n  \r\n  whenDataFetched = () => {\r\n    let temp = this.state.fetchedData;\r\n    temp.map(element=>{\r\n      element.image=this.state.fetchedImages[element.id-1];\r\n    })\r\n    this.setState({fetchedData:temp, searchResult: temp})\r\n  };\r\n\r\n  searchInMonsterFunction(searchBoxValue){\r\n    this.setState({searchKey:searchBoxValue}, ()=>{\r\n      const result = this.state.fetchedData.filter(\r\n        element=> (element.name.toLowerCase()).includes(this.state.searchKey.toLowerCase())\r\n      );\r\n      this.setState({searchResult:result});\r\n    });\r\n  }\r\n\r\n  //graddientbackground\r\n  render(){\r\n    return (\r\n      <div className='app'>\r\n        <Header placeholder=\"Search in Monsters\" changeHandle={e=>this.searchInMonsterFunction(e.target.value)} hoverOnHandle={e=>this.titleHoverOn()} hoverOffHandle={e=>this.titleHoverOff()}\r\n                title=\"Monsters Rolodex\"/>\r\n        <CardList fetchedData={this.state.searchResult}/>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}